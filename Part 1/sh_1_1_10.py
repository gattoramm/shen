def sh_1_1_10(n: int):
    """ Последовательность Фибоначчи определяется так: a(0) = 0,
        a(1)=1,a(k)=a(k-1)+a(k-2) при k>2. Дано n, вычислить a(n).
        требуется, чтобы число операций было пропорционально
        log(n). (Переменные должны быть целочисленными.)
        Пара соседних чисел Фибоначчи получается из предыдущей
        умножением на матрицу
        |1 1|
        |1 0|
	"""

    def multiply_matrix(M, T):
        r = [[0, 0], [0, 0]]
        r[0][0] = T[0][0] * M[0][0] + T[0][1] * M[1][0]
        r[0][1] = T[0][0] * M[0][1] + T[0][1] * M[1][1]
        r[1][0] = T[1][0] * M[0][0] + T[1][1] * M[1][0]
        r[1][1] = T[1][0] * M[0][1] + T[1][1] * M[1][1]
        return r

    M = [[1, 1], [1, 0]]
    T = [[1, 0], [0, 1]]

    while n > 0:
        if n % 2 == 0:
            n /= 2
            M = multiply_matrix(M, M)
        n -= 1
        T = multiply_matrix(T, M)
    return T[0][1]


a = sh_1_1_10(10)
print(a)
